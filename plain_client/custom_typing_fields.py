# Generated by ariadne-codegen

from .base_operation import GraphQLField


class SlackUserIdentityGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackUserIdentityGraphQLField":
        self._alias = alias
        return self


class UserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserGraphQLField":
        self._alias = alias
        return self


class UserAccountGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserAccountGraphQLField":
        self._alias = alias
        return self


class WorkspaceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceGraphQLField":
        self._alias = alias
        return self


class WorkspaceInviteGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceInviteGraphQLField":
        self._alias = alias
        return self


class RoleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RoleGraphQLField":
        self._alias = alias
        return self


class LabelTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelTypeGraphQLField":
        self._alias = alias
        return self


class LabelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelGraphQLField":
        self._alias = alias
        return self


class EmailAddressGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmailAddressGraphQLField":
        self._alias = alias
        return self


class CompanyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanyGraphQLField":
        self._alias = alias
        return self


class CompanyEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanyEdgeGraphQLField":
        self._alias = alias
        return self


class CompanyConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanyConnectionGraphQLField":
        self._alias = alias
        return self


class TenantEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TenantEdgeGraphQLField":
        self._alias = alias
        return self


class TenantConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TenantConnectionGraphQLField":
        self._alias = alias
        return self


class CustomerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerGraphQLField":
        self._alias = alias
        return self


class CustomerGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerGroupGraphQLField":
        self._alias = alias
        return self


class CustomerGroupMembershipGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerGroupMembershipGraphQLField":
        self._alias = alias
        return self


class CustomerGroupEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerGroupEdgeGraphQLField":
        self._alias = alias
        return self


class CustomerGroupConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerGroupConnectionGraphQLField":
        self._alias = alias
        return self


class CustomerGroupMembershipEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerGroupMembershipEdgeGraphQLField":
        self._alias = alias
        return self


class CustomerGroupMembershipConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerGroupMembershipConnectionGraphQLField":
        self._alias = alias
        return self


class CustomerTenantMembershipGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerTenantMembershipGraphQLField":
        self._alias = alias
        return self


class CustomerTenantMembershipEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerTenantMembershipEdgeGraphQLField":
        self._alias = alias
        return self


class CustomerTenantMembershipConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerTenantMembershipConnectionGraphQLField":
        self._alias = alias
        return self


class DependsOnThreadFieldTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependsOnThreadFieldTypeGraphQLField":
        self._alias = alias
        return self


class DependsOnLabelTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DependsOnLabelTypeGraphQLField":
        self._alias = alias
        return self


class ThreadFieldSchemaGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadFieldSchemaGraphQLField":
        self._alias = alias
        return self


class ThreadFieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadFieldGraphQLField":
        self._alias = alias
        return self


class ThreadDiscussionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadDiscussionGraphQLField":
        self._alias = alias
        return self


class ThreadDiscussionMessageConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadDiscussionMessageConnectionGraphQLField":
        self._alias = alias
        return self


class ThreadDiscussionMessageEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadDiscussionMessageEdgeGraphQLField":
        self._alias = alias
        return self


class ThreadDiscussionMessageReactionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadDiscussionMessageReactionGraphQLField":
        self._alias = alias
        return self


class ThreadDiscussionMessageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadDiscussionMessageGraphQLField":
        self._alias = alias
        return self


class WorkflowRuleGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowRuleGraphQLField":
        self._alias = alias
        return self


class WorkflowRuleEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowRuleEdgeGraphQLField":
        self._alias = alias
        return self


class WorkflowRuleConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkflowRuleConnectionGraphQLField":
        self._alias = alias
        return self


class ChatAppSecretGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatAppSecretGraphQLField":
        self._alias = alias
        return self


class ChatAppHiddenSecretGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatAppHiddenSecretGraphQLField":
        self._alias = alias
        return self


class ChatAppGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatAppGraphQLField":
        self._alias = alias
        return self


class ChatAppEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatAppEdgeGraphQLField":
        self._alias = alias
        return self


class ChatAppConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatAppConnectionGraphQLField":
        self._alias = alias
        return self


class NoteGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NoteGraphQLField":
        self._alias = alias
        return self


class SavedThreadsViewSortGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedThreadsViewSortGraphQLField":
        self._alias = alias
        return self


class SavedThreadsViewFilterThreadFieldGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedThreadsViewFilterThreadFieldGraphQLField":
        self._alias = alias
        return self


class ThreadsDisplayOptionsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadsDisplayOptionsGraphQLField":
        self._alias = alias
        return self


class SavedThreadsViewFilterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedThreadsViewFilterGraphQLField":
        self._alias = alias
        return self


class SavedThreadsViewGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedThreadsViewGraphQLField":
        self._alias = alias
        return self


class SavedThreadsViewConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedThreadsViewConnectionGraphQLField":
        self._alias = alias
        return self


class SavedThreadsViewEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SavedThreadsViewEdgeGraphQLField":
        self._alias = alias
        return self


class FavoritePageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FavoritePageGraphQLField":
        self._alias = alias
        return self


class FavoritePageConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FavoritePageConnectionGraphQLField":
        self._alias = alias
        return self


class FavoritePageEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FavoritePageEdgeGraphQLField":
        self._alias = alias
        return self


class SnippetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SnippetGraphQLField":
        self._alias = alias
        return self


class EmailSignatureGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmailSignatureGraphQLField":
        self._alias = alias
        return self


class ChatGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatGraphQLField":
        self._alias = alias
        return self


class PageInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PageInfoGraphQLField":
        self._alias = alias
        return self


class DateTimeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DateTimeGraphQLField":
        self._alias = alias
        return self


class TimeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeGraphQLField":
        self._alias = alias
        return self


class WorkspaceEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceEdgeGraphQLField":
        self._alias = alias
        return self


class WorkspaceConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceConnectionGraphQLField":
        self._alias = alias
        return self


class WorkspaceInviteEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceInviteEdgeGraphQLField":
        self._alias = alias
        return self


class WorkspaceInviteConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceInviteConnectionGraphQLField":
        self._alias = alias
        return self


class UserEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserEdgeGraphQLField":
        self._alias = alias
        return self


class UserConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserConnectionGraphQLField":
        self._alias = alias
        return self


class RoleEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RoleEdgeGraphQLField":
        self._alias = alias
        return self


class RoleConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RoleConnectionGraphQLField":
        self._alias = alias
        return self


class LabelTypeEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelTypeEdgeGraphQLField":
        self._alias = alias
        return self


class LabelTypeConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LabelTypeConnectionGraphQLField":
        self._alias = alias
        return self


class ThreadFieldSchemaEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadFieldSchemaEdgeGraphQLField":
        self._alias = alias
        return self


class ThreadFieldSchemaConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadFieldSchemaConnectionGraphQLField":
        self._alias = alias
        return self


class CustomerEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerEdgeGraphQLField":
        self._alias = alias
        return self


class CustomerConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerConnectionGraphQLField":
        self._alias = alias
        return self


class SnippetEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SnippetEdgeGraphQLField":
        self._alias = alias
        return self


class SnippetConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SnippetConnectionGraphQLField":
        self._alias = alias
        return self


class UserActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserActorGraphQLField":
        self._alias = alias
        return self


class CustomerActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerActorGraphQLField":
        self._alias = alias
        return self


class DeletedCustomerActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeletedCustomerActorGraphQLField":
        self._alias = alias
        return self


class SystemActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemActorGraphQLField":
        self._alias = alias
        return self


class SystemGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SystemGraphQLField":
        self._alias = alias
        return self


class MachineUserActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineUserActorGraphQLField":
        self._alias = alias
        return self


class NoteEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NoteEntryGraphQLField":
        self._alias = alias
        return self


class ChatEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatEntryGraphQLField":
        self._alias = alias
        return self


class TimelineEventEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimelineEventEntryGraphQLField":
        self._alias = alias
        return self


class ThreadEventEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadEventEntryGraphQLField":
        self._alias = alias
        return self


class CustomerEventEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerEventEntryGraphQLField":
        self._alias = alias
        return self


class SlackReactionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackReactionGraphQLField":
        self._alias = alias
        return self


class SlackMessageEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackMessageEntryGraphQLField":
        self._alias = alias
        return self


class SlackMessageEntryRelatedThreadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackMessageEntryRelatedThreadGraphQLField":
        self._alias = alias
        return self


class SlackReplyEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackReplyEntryGraphQLField":
        self._alias = alias
        return self


class MSTeamsMessageGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MSTeamsMessageGraphQLField":
        self._alias = alias
        return self


class MSTeamsMessageEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MSTeamsMessageEntryGraphQLField":
        self._alias = alias
        return self


class DiscordMessageEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DiscordMessageEntryGraphQLField":
        self._alias = alias
        return self


class ThreadDiscussionEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadDiscussionEntryGraphQLField":
        self._alias = alias
        return self


class ThreadDiscussionResolvedEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadDiscussionResolvedEntryGraphQLField":
        self._alias = alias
        return self


class FileSizeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FileSizeGraphQLField":
        self._alias = alias
        return self


class AttachmentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AttachmentGraphQLField":
        self._alias = alias
        return self


class CustomerEmailActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerEmailActorGraphQLField":
        self._alias = alias
        return self


class DeletedCustomerEmailActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeletedCustomerEmailActorGraphQLField":
        self._alias = alias
        return self


class UserEmailActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserEmailActorGraphQLField":
        self._alias = alias
        return self


class SupportEmailAddressEmailActorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SupportEmailAddressEmailActorGraphQLField":
        self._alias = alias
        return self


class EmailActorUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "EmailActorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "EmailActorUnion":
        self._alias = alias
        return self


class EmailParticipantGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmailParticipantGraphQLField":
        self._alias = alias
        return self


class EmailBounceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmailBounceGraphQLField":
        self._alias = alias
        return self


class EmailEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmailEntryGraphQLField":
        self._alias = alias
        return self


class ComponentTextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComponentTextGraphQLField":
        self._alias = alias
        return self


class ComponentPlainTextGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComponentPlainTextGraphQLField":
        self._alias = alias
        return self


class ComponentSpacerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComponentSpacerGraphQLField":
        self._alias = alias
        return self


class ComponentDividerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComponentDividerGraphQLField":
        self._alias = alias
        return self


class ComponentLinkButtonGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComponentLinkButtonGraphQLField":
        self._alias = alias
        return self


class ComponentCopyButtonGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComponentCopyButtonGraphQLField":
        self._alias = alias
        return self


class ComponentBadgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComponentBadgeGraphQLField":
        self._alias = alias
        return self


class ComponentRowGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComponentRowGraphQLField":
        self._alias = alias
        return self


class ComponentContainerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ComponentContainerGraphQLField":
        self._alias = alias
        return self


class ComponentContainerContentUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ComponentContainerContentUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ComponentContainerContentUnion":
        self._alias = alias
        return self


class ComponentRowContentUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ComponentRowContentUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ComponentRowContentUnion":
        self._alias = alias
        return self


class CustomTimelineEntryComponentUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "CustomTimelineEntryComponentUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "CustomTimelineEntryComponentUnion":
        self._alias = alias
        return self


class EventComponentUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "EventComponentUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "EventComponentUnion":
        self._alias = alias
        return self


class CustomerCardComponentUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "CustomerCardComponentUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "CustomerCardComponentUnion":
        self._alias = alias
        return self


class CustomEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomEntryGraphQLField":
        self._alias = alias
        return self


class ThreadAssignmentTransitionedEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadAssignmentTransitionedEntryGraphQLField":
        self._alias = alias
        return self


class ThreadAdditionalAssigneesTransitionedEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ThreadAdditionalAssigneesTransitionedEntryGraphQLField":
        self._alias = alias
        return self


class ThreadStatusTransitionedEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusTransitionedEntryGraphQLField":
        self._alias = alias
        return self


class ThreadPriorityChangedEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadPriorityChangedEntryGraphQLField":
        self._alias = alias
        return self


class ThreadLabelsChangedEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLabelsChangedEntryGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementStatusTransitionedEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ServiceLevelAgreementStatusTransitionedEntryGraphQLField":
        self._alias = alias
        return self


class ActorUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ActorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ActorUnion":
        self._alias = alias
        return self


class InternalActorUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "InternalActorUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "InternalActorUnion":
        self._alias = alias
        return self


class EntryUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "EntryUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "EntryUnion":
        self._alias = alias
        return self


class LinearIssueThreadLinkStateTransitionedEntryGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "LinearIssueThreadLinkStateTransitionedEntryGraphQLField":
        self._alias = alias
        return self


class ThreadLinkUpdatedEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkUpdatedEntryGraphQLField":
        self._alias = alias
        return self


class TimelineEntryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimelineEntryGraphQLField":
        self._alias = alias
        return self


class CustomerEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerEventGraphQLField":
        self._alias = alias
        return self


class ThreadEventGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadEventGraphQLField":
        self._alias = alias
        return self


class TimelineEntryEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimelineEntryEdgeGraphQLField":
        self._alias = alias
        return self


class TimelineEntryConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimelineEntryConnectionGraphQLField":
        self._alias = alias
        return self


class MachineUserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineUserGraphQLField":
        self._alias = alias
        return self


class MachineUserEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineUserEdgeGraphQLField":
        self._alias = alias
        return self


class MachineUserConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MachineUserConnectionGraphQLField":
        self._alias = alias
        return self


class ApiKeyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApiKeyGraphQLField":
        self._alias = alias
        return self


class ApiKeyEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApiKeyEdgeGraphQLField":
        self._alias = alias
        return self


class ApiKeyConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ApiKeyConnectionGraphQLField":
        self._alias = alias
        return self


class PermissionsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PermissionsGraphQLField":
        self._alias = alias
        return self


class WorkspaceMSTeamsInstallationInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceMSTeamsInstallationInfoGraphQLField":
        self._alias = alias
        return self


class UserMSTeamsInstallationInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserMSTeamsInstallationInfoGraphQLField":
        self._alias = alias
        return self


class UserMSTeamsIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserMSTeamsIntegrationGraphQLField":
        self._alias = alias
        return self


class UserSlackInstallationInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserSlackInstallationInfoGraphQLField":
        self._alias = alias
        return self


class WorkspaceSlackInstallationInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceSlackInstallationInfoGraphQLField":
        self._alias = alias
        return self


class WorkspaceSlackChannelInstallationInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceSlackChannelInstallationInfoGraphQLField":
        self._alias = alias
        return self


class UserAuthSlackInstallationInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserAuthSlackInstallationInfoGraphQLField":
        self._alias = alias
        return self


class UserSlackIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserSlackIntegrationGraphQLField":
        self._alias = alias
        return self


class UserAuthSlackIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserAuthSlackIntegrationGraphQLField":
        self._alias = alias
        return self


class WorkspaceSlackIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceSlackIntegrationGraphQLField":
        self._alias = alias
        return self


class WorkspaceSlackIntegrationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceSlackIntegrationEdgeGraphQLField":
        self._alias = alias
        return self


class WorkspaceSlackIntegrationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceSlackIntegrationConnectionGraphQLField":
        self._alias = alias
        return self


class WorkspaceSlackChannelIntegrationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceSlackChannelIntegrationEdgeGraphQLField":
        self._alias = alias
        return self


class WorkspaceSlackChannelIntegrationConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "WorkspaceSlackChannelIntegrationConnectionGraphQLField":
        self._alias = alias
        return self


class WorkspaceSlackChannelIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceSlackChannelIntegrationGraphQLField":
        self._alias = alias
        return self


class WorkspaceDiscordChannelIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceDiscordChannelIntegrationGraphQLField":
        self._alias = alias
        return self


class WorkspaceDiscordChannelInstallationInfoGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "WorkspaceDiscordChannelInstallationInfoGraphQLField":
        self._alias = alias
        return self


class WorkspaceDiscordIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceDiscordIntegrationGraphQLField":
        self._alias = alias
        return self


class WorkspaceDiscordChannelIntegrationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceDiscordChannelIntegrationEdgeGraphQLField":
        self._alias = alias
        return self


class WorkspaceDiscordChannelIntegrationConnectionGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "WorkspaceDiscordChannelIntegrationConnectionGraphQLField":
        self._alias = alias
        return self


class WorkspaceDiscordIntegrationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceDiscordIntegrationEdgeGraphQLField":
        self._alias = alias
        return self


class WorkspaceDiscordIntegrationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceDiscordIntegrationConnectionGraphQLField":
        self._alias = alias
        return self


class UserLinearInstallationInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserLinearInstallationInfoGraphQLField":
        self._alias = alias
        return self


class LinearIntegrationTokenGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinearIntegrationTokenGraphQLField":
        self._alias = alias
        return self


class JiraIntegrationTokenGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JiraIntegrationTokenGraphQLField":
        self._alias = alias
        return self


class UserLinearIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserLinearIntegrationGraphQLField":
        self._alias = alias
        return self


class CustomerCardConfigApiHeaderGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardConfigApiHeaderGraphQLField":
        self._alias = alias
        return self


class CustomerCardConfigGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardConfigGraphQLField":
        self._alias = alias
        return self


class SettingScopeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SettingScopeGraphQLField":
        self._alias = alias
        return self


class BooleanSettingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BooleanSettingGraphQLField":
        self._alias = alias
        return self


class StringSettingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StringSettingGraphQLField":
        self._alias = alias
        return self


class NumberSettingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NumberSettingGraphQLField":
        self._alias = alias
        return self


class SettingUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "SettingUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "SettingUnion":
        self._alias = alias
        return self


class CustomerSearchEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerSearchEdgeGraphQLField":
        self._alias = alias
        return self


class CustomerSearchConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerSearchConnectionGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardInstanceGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceLoadingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardInstanceLoadingGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceLoadedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardInstanceLoadedGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceMissingCardErrorDetailGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CustomerCardInstanceMissingCardErrorDetailGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceResponseBodyErrorDetailGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CustomerCardInstanceResponseBodyErrorDetailGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceStatusCodeErrorDetailGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CustomerCardInstanceStatusCodeErrorDetailGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceRequestErrorDetailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardInstanceRequestErrorDetailGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceUnknownErrorDetailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardInstanceUnknownErrorDetailGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceTimeoutErrorDetailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardInstanceTimeoutErrorDetailGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceErrorDetailUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "CustomerCardInstanceErrorDetailUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "CustomerCardInstanceErrorDetailUnion":
        self._alias = alias
        return self


class CustomerCardInstanceErrorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardInstanceErrorGraphQLField":
        self._alias = alias
        return self


class GeneratedReplyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "GeneratedReplyGraphQLField":
        self._alias = alias
        return self


class ThreadClusterGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadClusterGraphQLField":
        self._alias = alias
        return self


class ThreadWithDistanceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadWithDistanceGraphQLField":
        self._alias = alias
        return self


class TierGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TierGraphQLField":
        self._alias = alias
        return self


class TenantTierMembershipGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TenantTierMembershipGraphQLField":
        self._alias = alias
        return self


class CompanyTierMembershipGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanyTierMembershipGraphQLField":
        self._alias = alias
        return self


class TierMembershipUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "TierMembershipUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "TierMembershipUnion":
        self._alias = alias
        return self


class TierMembershipEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TierMembershipEdgeGraphQLField":
        self._alias = alias
        return self


class TierMembershipConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TierMembershipConnectionGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementThreadLabelTypeIdFilterGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ServiceLevelAgreementThreadLabelTypeIdFilterGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ServiceLevelAgreementGraphQLField":
        self._alias = alias
        return self


class FirstResponseTimeServiceLevelAgreementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "FirstResponseTimeServiceLevelAgreementGraphQLField":
        self._alias = alias
        return self


class NextResponseTimeServiceLevelAgreementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "NextResponseTimeServiceLevelAgreementGraphQLField":
        self._alias = alias
        return self


class BreachActionUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "BreachActionUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "BreachActionUnion":
        self._alias = alias
        return self


class BeforeBreachActionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BeforeBreachActionGraphQLField":
        self._alias = alias
        return self


class TierEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TierEdgeGraphQLField":
        self._alias = alias
        return self


class TierConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TierConnectionGraphQLField":
        self._alias = alias
        return self


class MetricDimensionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MetricDimensionGraphQLField":
        self._alias = alias
        return self


class SingleValueMetricValueGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SingleValueMetricValueGraphQLField":
        self._alias = alias
        return self


class SingleValueMetricGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SingleValueMetricGraphQLField":
        self._alias = alias
        return self


class TimeSeriesMetricGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeSeriesMetricGraphQLField":
        self._alias = alias
        return self


class TimeSeriesSeriesGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeSeriesSeriesGraphQLField":
        self._alias = alias
        return self


class TimeSeriesMetricDimensionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimeSeriesMetricDimensionGraphQLField":
        self._alias = alias
        return self


class ThreadConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadConnectionGraphQLField":
        self._alias = alias
        return self


class ThreadEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadEdgeGraphQLField":
        self._alias = alias
        return self


class MutationFieldErrorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MutationFieldErrorGraphQLField":
        self._alias = alias
        return self


class MutationErrorGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MutationErrorGraphQLField":
        self._alias = alias
        return self


class CreateUserAccountOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateUserAccountOutputGraphQLField":
        self._alias = alias
        return self


class CreateWorkspaceOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateWorkspaceOutputGraphQLField":
        self._alias = alias
        return self


class InviteUserToWorkspaceOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "InviteUserToWorkspaceOutputGraphQLField":
        self._alias = alias
        return self


class AcceptWorkspaceInviteOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AcceptWorkspaceInviteOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWorkspaceInviteOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteWorkspaceInviteOutputGraphQLField":
        self._alias = alias
        return self


class AssignRolesToUserOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssignRolesToUserOutputGraphQLField":
        self._alias = alias
        return self


class CreateLabelTypeOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateLabelTypeOutputGraphQLField":
        self._alias = alias
        return self


class ArchiveLabelTypeOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ArchiveLabelTypeOutputGraphQLField":
        self._alias = alias
        return self


class UnarchiveLabelTypeOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnarchiveLabelTypeOutputGraphQLField":
        self._alias = alias
        return self


class UpdateLabelTypeOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateLabelTypeOutputGraphQLField":
        self._alias = alias
        return self


class AddLabelsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddLabelsOutputGraphQLField":
        self._alias = alias
        return self


class RemoveLabelsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveLabelsOutputGraphQLField":
        self._alias = alias
        return self


class CreateThreadFieldSchemaOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateThreadFieldSchemaOutputGraphQLField":
        self._alias = alias
        return self


class UpdateThreadFieldSchemaOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateThreadFieldSchemaOutputGraphQLField":
        self._alias = alias
        return self


class DeleteThreadFieldSchemaOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteThreadFieldSchemaOutputGraphQLField":
        self._alias = alias
        return self


class ReorderThreadFieldSchemasOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReorderThreadFieldSchemasOutputGraphQLField":
        self._alias = alias
        return self


class UpsertThreadFieldOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpsertThreadFieldOutputGraphQLField":
        self._alias = alias
        return self


class BulkUpsertThreadFieldResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BulkUpsertThreadFieldResultGraphQLField":
        self._alias = alias
        return self


class BulkUpsertThreadFieldsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BulkUpsertThreadFieldsOutputGraphQLField":
        self._alias = alias
        return self


class DeleteThreadFieldOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteThreadFieldOutputGraphQLField":
        self._alias = alias
        return self


class CreateWorkflowRuleOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateWorkflowRuleOutputGraphQLField":
        self._alias = alias
        return self


class UpdateWorkflowRuleOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateWorkflowRuleOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWorkflowRuleOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteWorkflowRuleOutputGraphQLField":
        self._alias = alias
        return self


class CreateChatAppOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateChatAppOutputGraphQLField":
        self._alias = alias
        return self


class UpdateChatAppOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateChatAppOutputGraphQLField":
        self._alias = alias
        return self


class DeleteChatAppOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteChatAppOutputGraphQLField":
        self._alias = alias
        return self


class CreateChatAppSecretOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateChatAppSecretOutputGraphQLField":
        self._alias = alias
        return self


class DeleteChatAppSecretOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteChatAppSecretOutputGraphQLField":
        self._alias = alias
        return self


class ThreadLinkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkGraphQLField":
        self._alias = alias
        return self


class LinearIssueStateGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinearIssueStateGraphQLField":
        self._alias = alias
        return self


class LinearIssueThreadLinkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "LinearIssueThreadLinkGraphQLField":
        self._alias = alias
        return self


class JiraIssueTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JiraIssueTypeGraphQLField":
        self._alias = alias
        return self


class JiraIssueThreadLinkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JiraIssueThreadLinkGraphQLField":
        self._alias = alias
        return self


class PlainThreadThreadLinkGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PlainThreadThreadLinkGraphQLField":
        self._alias = alias
        return self


class CreateThreadLinkOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateThreadLinkOutputGraphQLField":
        self._alias = alias
        return self


class DeleteThreadLinkOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteThreadLinkOutputGraphQLField":
        self._alias = alias
        return self


class ThreadLinkEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkEdgeGraphQLField":
        self._alias = alias
        return self


class ThreadLinkConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkConnectionGraphQLField":
        self._alias = alias
        return self


class ThreadLinkGroupAggregateMetricsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkGroupAggregateMetricsGraphQLField":
        self._alias = alias
        return self


class ThreadLinkGroupSingleTierMetricsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkGroupSingleTierMetricsGraphQLField":
        self._alias = alias
        return self


class ThreadLinkGroupSingleCompanyMetricsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkGroupSingleCompanyMetricsGraphQLField":
        self._alias = alias
        return self


class ThreadLinkGroupTierMetricsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkGroupTierMetricsGraphQLField":
        self._alias = alias
        return self


class ThreadLinkGroupCompanyMetricsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkGroupCompanyMetricsGraphQLField":
        self._alias = alias
        return self


class ThreadLinkGroupGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkGroupGraphQLField":
        self._alias = alias
        return self


class ThreadLinkGroupEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkGroupEdgeGraphQLField":
        self._alias = alias
        return self


class ThreadLinkGroupConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadLinkGroupConnectionGraphQLField":
        self._alias = alias
        return self


class CreateNoteOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateNoteOutputGraphQLField":
        self._alias = alias
        return self


class DeleteNoteOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteNoteOutputGraphQLField":
        self._alias = alias
        return self


class CreateSavedThreadsViewOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateSavedThreadsViewOutputGraphQLField":
        self._alias = alias
        return self


class DeleteSavedThreadsViewOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteSavedThreadsViewOutputGraphQLField":
        self._alias = alias
        return self


class UpdateSavedThreadsViewOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateSavedThreadsViewOutputGraphQLField":
        self._alias = alias
        return self


class CreateMyFavoritePageOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateMyFavoritePageOutputGraphQLField":
        self._alias = alias
        return self


class DeleteMyFavoritePageOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteMyFavoritePageOutputGraphQLField":
        self._alias = alias
        return self


class CreateSnippetOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateSnippetOutputGraphQLField":
        self._alias = alias
        return self


class DeleteSnippetOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteSnippetOutputGraphQLField":
        self._alias = alias
        return self


class UpdateSnippetOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateSnippetOutputGraphQLField":
        self._alias = alias
        return self


class SendChatOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SendChatOutputGraphQLField":
        self._alias = alias
        return self


class SendCustomerChatOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SendCustomerChatOutputGraphQLField":
        self._alias = alias
        return self


class ChangeUserStatusOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChangeUserStatusOutputGraphQLField":
        self._alias = alias
        return self


class UpdateWorkspaceOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateWorkspaceOutputGraphQLField":
        self._alias = alias
        return self


class DeleteUserOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteUserOutputGraphQLField":
        self._alias = alias
        return self


class DnsRecordGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DnsRecordGraphQLField":
        self._alias = alias
        return self


class WorkspaceEmailDomainSettingsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceEmailDomainSettingsGraphQLField":
        self._alias = alias
        return self


class WorkspaceEmailSettingsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceEmailSettingsGraphQLField":
        self._alias = alias
        return self


class AddWorkspaceAlternateSupportEmailAddressOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "AddWorkspaceAlternateSupportEmailAddressOutputGraphQLField":
        self._alias = alias
        return self


class RemoveWorkspaceAlternateSupportEmailAddressOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "RemoveWorkspaceAlternateSupportEmailAddressOutputGraphQLField":
        self._alias = alias
        return self


class CreateWorkspaceEmailDomainSettingsOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CreateWorkspaceEmailDomainSettingsOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWorkspaceEmailDomainSettingsOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "DeleteWorkspaceEmailDomainSettingsOutputGraphQLField":
        self._alias = alias
        return self


class VerifyWorkspaceEmailForwardingSettingsOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "VerifyWorkspaceEmailForwardingSettingsOutputGraphQLField":
        self._alias = alias
        return self


class VerifyWorkspaceEmailDnsSettingsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "VerifyWorkspaceEmailDnsSettingsOutputGraphQLField":
        self._alias = alias
        return self


class UpdateWorkspaceEmailSettingsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateWorkspaceEmailSettingsOutputGraphQLField":
        self._alias = alias
        return self


class WorkspaceChatSettingsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceChatSettingsGraphQLField":
        self._alias = alias
        return self


class EmailGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmailGraphQLField":
        self._alias = alias
        return self


class SendNewEmailOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SendNewEmailOutputGraphQLField":
        self._alias = alias
        return self


class ReplyToEmailOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReplyToEmailOutputGraphQLField":
        self._alias = alias
        return self


class SendBulkEmailOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SendBulkEmailOutputGraphQLField":
        self._alias = alias
        return self


class EmailPreviewUrlGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "EmailPreviewUrlGraphQLField":
        self._alias = alias
        return self


class CreateEmailPreviewUrlOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateEmailPreviewUrlOutputGraphQLField":
        self._alias = alias
        return self


class AttachmentDownloadUrlGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AttachmentDownloadUrlGraphQLField":
        self._alias = alias
        return self


class CreateAttachmentDownloadUrlOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateAttachmentDownloadUrlOutputGraphQLField":
        self._alias = alias
        return self


class UploadFormDataGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UploadFormDataGraphQLField":
        self._alias = alias
        return self


class AttachmentUploadUrlGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AttachmentUploadUrlGraphQLField":
        self._alias = alias
        return self


class CreateAttachmentUploadUrlOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateAttachmentUploadUrlOutputGraphQLField":
        self._alias = alias
        return self


class UpsertCustomerOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpsertCustomerOutputGraphQLField":
        self._alias = alias
        return self


class CreateMachineUserOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateMachineUserOutputGraphQLField":
        self._alias = alias
        return self


class DeleteMachineUserOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteMachineUserOutputGraphQLField":
        self._alias = alias
        return self


class UpdateMachineUserOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateMachineUserOutputGraphQLField":
        self._alias = alias
        return self


class CreateApiKeyOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateApiKeyOutputGraphQLField":
        self._alias = alias
        return self


class UpdateApiKeyOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateApiKeyOutputGraphQLField":
        self._alias = alias
        return self


class DeleteApiKeyOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteApiKeyOutputGraphQLField":
        self._alias = alias
        return self


class DeleteCustomerOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteCustomerOutputGraphQLField":
        self._alias = alias
        return self


class CreateCustomerEventOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateCustomerEventOutputGraphQLField":
        self._alias = alias
        return self


class CreateThreadEventOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateThreadEventOutputGraphQLField":
        self._alias = alias
        return self


class CreateAutoresponderOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateAutoresponderOutputGraphQLField":
        self._alias = alias
        return self


class UpdateAutoresponderOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateAutoresponderOutputGraphQLField":
        self._alias = alias
        return self


class DeleteAutoresponderOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteAutoresponderOutputGraphQLField":
        self._alias = alias
        return self


class ReorderAutorespondersOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReorderAutorespondersOutputGraphQLField":
        self._alias = alias
        return self


class AutoresponderTierConditionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoresponderTierConditionGraphQLField":
        self._alias = alias
        return self


class AutoresponderBusinessHoursConditionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoresponderBusinessHoursConditionGraphQLField":
        self._alias = alias
        return self


class AutoresponderSupportEmailsConditionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoresponderSupportEmailsConditionGraphQLField":
        self._alias = alias
        return self


class AutoresponderLabelConditionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoresponderLabelConditionGraphQLField":
        self._alias = alias
        return self


class AutoresponderConditionUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "AutoresponderConditionUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "AutoresponderConditionUnion":
        self._alias = alias
        return self


class AutoresponderGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoresponderGraphQLField":
        self._alias = alias
        return self


class AutoresponderConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoresponderConnectionGraphQLField":
        self._alias = alias
        return self


class AutoresponderEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AutoresponderEdgeGraphQLField":
        self._alias = alias
        return self


class UpdateGeneratedReplyOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateGeneratedReplyOutputGraphQLField":
        self._alias = alias
        return self


class CreateIndexedDocumentOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateIndexedDocumentOutputGraphQLField":
        self._alias = alias
        return self


class DeleteIndexedDocumentOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteIndexedDocumentOutputGraphQLField":
        self._alias = alias
        return self


class IndexedDocumentGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IndexedDocumentGraphQLField":
        self._alias = alias
        return self


class IndexedDocumentStatusUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "IndexedDocumentStatusUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "IndexedDocumentStatusUnion":
        self._alias = alias
        return self


class IndexedDocumentStatusIndexedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IndexedDocumentStatusIndexedGraphQLField":
        self._alias = alias
        return self


class IndexedDocumentStatusPendingGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IndexedDocumentStatusPendingGraphQLField":
        self._alias = alias
        return self


class IndexedDocumentStatusFailedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IndexedDocumentStatusFailedGraphQLField":
        self._alias = alias
        return self


class IndexedDocumentConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IndexedDocumentConnectionGraphQLField":
        self._alias = alias
        return self


class IndexedDocumentEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "IndexedDocumentEdgeGraphQLField":
        self._alias = alias
        return self


class CreateThreadDiscussionOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateThreadDiscussionOutputGraphQLField":
        self._alias = alias
        return self


class SendThreadDiscussionMessageOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SendThreadDiscussionMessageOutputGraphQLField":
        self._alias = alias
        return self


class MarkThreadDiscussionAsResolvedOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarkThreadDiscussionAsResolvedOutputGraphQLField":
        self._alias = alias
        return self


class UpdateCompanyTierOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateCompanyTierOutputGraphQLField":
        self._alias = alias
        return self


class ChangeThreadCustomerOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChangeThreadCustomerOutputGraphQLField":
        self._alias = alias
        return self


class UpdateTenantTierOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateTenantTierOutputGraphQLField":
        self._alias = alias
        return self


class AddMembersToTierOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddMembersToTierOutputGraphQLField":
        self._alias = alias
        return self


class RemoveMembersFromTierOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveMembersFromTierOutputGraphQLField":
        self._alias = alias
        return self


class CreateTierOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateTierOutputGraphQLField":
        self._alias = alias
        return self


class UpdateTierOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateTierOutputGraphQLField":
        self._alias = alias
        return self


class DeleteTierOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteTierOutputGraphQLField":
        self._alias = alias
        return self


class CreateServiceLevelAgreementOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateServiceLevelAgreementOutputGraphQLField":
        self._alias = alias
        return self


class UpdateServiceLevelAgreementOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateServiceLevelAgreementOutputGraphQLField":
        self._alias = alias
        return self


class DeleteServiceLevelAgreementOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteServiceLevelAgreementOutputGraphQLField":
        self._alias = alias
        return self


class UpsertCompanyOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpsertCompanyOutputGraphQLField":
        self._alias = alias
        return self


class TenantGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TenantGraphQLField":
        self._alias = alias
        return self


class UpsertTenantOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpsertTenantOutputGraphQLField":
        self._alias = alias
        return self


class UpdateCustomerCompanyOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateCustomerCompanyOutputGraphQLField":
        self._alias = alias
        return self


class SendMSTeamsMessageOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SendMSTeamsMessageOutputGraphQLField":
        self._alias = alias
        return self


class SendSlackMessageOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SendSlackMessageOutputGraphQLField":
        self._alias = alias
        return self


class ShareThreadToUserInSlackOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ShareThreadToUserInSlackOutputGraphQLField":
        self._alias = alias
        return self


class SendDiscordMessageOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SendDiscordMessageOutputGraphQLField":
        self._alias = alias
        return self


class ToggleSlackMessageReactionOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToggleSlackMessageReactionOutputGraphQLField":
        self._alias = alias
        return self


class ForkThreadOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ForkThreadOutputGraphQLField":
        self._alias = alias
        return self


class ReplyToThreadOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReplyToThreadOutputGraphQLField":
        self._alias = alias
        return self


class ThreadSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadSearchResultGraphQLField":
        self._alias = alias
        return self


class ThreadSearchResultEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadSearchResultEdgeGraphQLField":
        self._alias = alias
        return self


class ThreadSearchResultConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadSearchResultConnectionGraphQLField":
        self._alias = alias
        return self


class UpsertMyEmailSignatureOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpsertMyEmailSignatureOutputGraphQLField":
        self._alias = alias
        return self


class MarkThreadAsDoneOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarkThreadAsDoneOutputGraphQLField":
        self._alias = alias
        return self


class MarkThreadAsTodoOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarkThreadAsTodoOutputGraphQLField":
        self._alias = alias
        return self


class ChangeThreadPriorityOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChangeThreadPriorityOutputGraphQLField":
        self._alias = alias
        return self


class UpdateThreadTitleOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateThreadTitleOutputGraphQLField":
        self._alias = alias
        return self


class SnoozeThreadOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SnoozeThreadOutputGraphQLField":
        self._alias = alias
        return self


class AssignThreadOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AssignThreadOutputGraphQLField":
        self._alias = alias
        return self


class UnassignThreadOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnassignThreadOutputGraphQLField":
        self._alias = alias
        return self


class AddAdditionalAssigneesOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddAdditionalAssigneesOutputGraphQLField":
        self._alias = alias
        return self


class RemoveAdditionalAssigneesOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveAdditionalAssigneesOutputGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailCreatedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailCreatedGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailNewReplyGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailNewReplyGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailRepliedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailRepliedGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailThreadLinkUpdatedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailThreadLinkUpdatedGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailLinearUpdatedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailLinearUpdatedGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailInProgressGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailInProgressGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailThreadDiscussionResolvedGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ThreadStatusDetailThreadDiscussionResolvedGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailUnsnoozedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailUnsnoozedGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailSnoozedGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailSnoozedGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailWaitingForDurationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailWaitingForDurationGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailWaitingForCustomerGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailWaitingForCustomerGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailIgnoredGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailIgnoredGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailDoneManuallySetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailDoneManuallySetGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailDoneAutomaticallySetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadStatusDetailDoneAutomaticallySetGraphQLField":
        self._alias = alias
        return self


class ThreadStatusDetailUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ThreadStatusDetailUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ThreadStatusDetailUnion":
        self._alias = alias
        return self


class ThreadMessageInfoGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadMessageInfoGraphQLField":
        self._alias = alias
        return self


class ThreadAssigneeUnion(GraphQLField):
    def on(self, type_name: str, *subfields: GraphQLField) -> "ThreadAssigneeUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ThreadAssigneeUnion":
        self._alias = alias
        return self


class ThreadChannelAssociationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadChannelAssociationGraphQLField":
        self._alias = alias
        return self


class SlackThreadChannelAssociationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackThreadChannelAssociationGraphQLField":
        self._alias = alias
        return self


class CreateThreadChannelAssociationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateThreadChannelAssociationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteThreadChannelAssociationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteThreadChannelAssociationOutputGraphQLField":
        self._alias = alias
        return self


class SlackThreadChannelDetailsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackThreadChannelDetailsGraphQLField":
        self._alias = alias
        return self


class ChatThreadChannelDetailsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChatThreadChannelDetailsGraphQLField":
        self._alias = alias
        return self


class ThreadChannelDetailsUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ThreadChannelDetailsUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ThreadChannelDetailsUnion":
        self._alias = alias
        return self


class ThreadGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementStatusDetailPendingGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ServiceLevelAgreementStatusDetailPendingGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementStatusDetailImminentBreachGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ServiceLevelAgreementStatusDetailImminentBreachGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementStatusDetailBreachingGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ServiceLevelAgreementStatusDetailBreachingGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementStatusDetailAchievedGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ServiceLevelAgreementStatusDetailAchievedGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementStatusDetailBreachedGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ServiceLevelAgreementStatusDetailBreachedGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementStatusDetailCancelledGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "ServiceLevelAgreementStatusDetailCancelledGraphQLField":
        self._alias = alias
        return self


class ServiceLevelAgreementStatusDetailUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "ServiceLevelAgreementStatusDetailUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "ServiceLevelAgreementStatusDetailUnion":
        self._alias = alias
        return self


class ServiceLevelAgreementStatusSummaryGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ServiceLevelAgreementStatusSummaryGraphQLField":
        self._alias = alias
        return self


class CreateThreadOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateThreadOutputGraphQLField":
        self._alias = alias
        return self


class MarkCustomerAsSpamOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MarkCustomerAsSpamOutputGraphQLField":
        self._alias = alias
        return self


class UnmarkCustomerAsSpamOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UnmarkCustomerAsSpamOutputGraphQLField":
        self._alias = alias
        return self


class SubscriptionEventTypeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubscriptionEventTypeGraphQLField":
        self._alias = alias
        return self


class WebhookVersionEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebhookVersionEdgeGraphQLField":
        self._alias = alias
        return self


class WebhookVersionConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebhookVersionConnectionGraphQLField":
        self._alias = alias
        return self


class WebhookTargetEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebhookTargetEdgeGraphQLField":
        self._alias = alias
        return self


class WebhookTargetConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebhookTargetConnectionGraphQLField":
        self._alias = alias
        return self


class WebhookVersionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebhookVersionGraphQLField":
        self._alias = alias
        return self


class WebhookTargetGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebhookTargetGraphQLField":
        self._alias = alias
        return self


class WebhookTargetEventSubscriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WebhookTargetEventSubscriptionGraphQLField":
        self._alias = alias
        return self


class CreateWebhookTargetOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateWebhookTargetOutputGraphQLField":
        self._alias = alias
        return self


class UpdateWebhookTargetOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateWebhookTargetOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWebhookTargetOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteWebhookTargetOutputGraphQLField":
        self._alias = alias
        return self


class ReorderCustomerCardConfigsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReorderCustomerCardConfigsOutputGraphQLField":
        self._alias = alias
        return self


class CreateCustomerCardConfigOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateCustomerCardConfigOutputGraphQLField":
        self._alias = alias
        return self


class UpdateCustomerCardConfigOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateCustomerCardConfigOutputGraphQLField":
        self._alias = alias
        return self


class DeleteCustomerCardConfigOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteCustomerCardConfigOutputGraphQLField":
        self._alias = alias
        return self


class ReloadCustomerCardInstanceOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ReloadCustomerCardInstanceOutputGraphQLField":
        self._alias = alias
        return self


class UpdateSettingOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateSettingOutputGraphQLField":
        self._alias = alias
        return self


class CreateMySlackIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateMySlackIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class CreateUserAuthSlackIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateUserAuthSlackIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class CreateWorkspaceSlackIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateWorkspaceSlackIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWorkspaceSlackIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteWorkspaceSlackIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class CreateWorkspaceSlackChannelIntegrationOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CreateWorkspaceSlackChannelIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWorkspaceSlackChannelIntegrationOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "DeleteWorkspaceSlackChannelIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteMySlackIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteMySlackIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteUserAuthSlackIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteUserAuthSlackIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class SlackUserConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackUserConnectionGraphQLField":
        self._alias = alias
        return self


class SlackUserEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackUserEdgeGraphQLField":
        self._alias = alias
        return self


class SlackUserGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SlackUserGraphQLField":
        self._alias = alias
        return self


class UpdateConnectedSlackChannelOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateConnectedSlackChannelOutputGraphQLField":
        self._alias = alias
        return self


class ConnectedSlackChannelConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConnectedSlackChannelConnectionGraphQLField":
        self._alias = alias
        return self


class ConnectedSlackChannelEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConnectedSlackChannelEdgeGraphQLField":
        self._alias = alias
        return self


class ConnectedSlackChannelGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ConnectedSlackChannelGraphQLField":
        self._alias = alias
        return self


class CreateWorkspaceDiscordChannelIntegrationOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CreateWorkspaceDiscordChannelIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class CreateWorkspaceDiscordIntegrationOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CreateWorkspaceDiscordIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWorkspaceDiscordIntegrationOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "DeleteWorkspaceDiscordIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWorkspaceDiscordChannelIntegrationOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "DeleteWorkspaceDiscordChannelIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class CreateMyLinearIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateMyLinearIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteMyLinearIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteMyLinearIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class CreateMyMSTeamsIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateMyMSTeamsIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteMyMSTeamsIntegrationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteMyMSTeamsIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class CreateWorkspaceMSTeamsIntegrationOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "CreateWorkspaceMSTeamsIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWorkspaceMSTeamsIntegrationOutputGraphQLField(GraphQLField):
    def alias(
        self, alias: str
    ) -> "DeleteWorkspaceMSTeamsIntegrationOutputGraphQLField":
        self._alias = alias
        return self


class WorkspaceMSTeamsIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceMSTeamsIntegrationGraphQLField":
        self._alias = alias
        return self


class TimelineEntryChangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimelineEntryChangeGraphQLField":
        self._alias = alias
        return self


class CustomerChangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerChangeGraphQLField":
        self._alias = alias
        return self


class ThreadChangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadChangeGraphQLField":
        self._alias = alias
        return self


class UserChangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UserChangeGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceChangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CustomerCardInstanceChangeGraphQLField":
        self._alias = alias
        return self


class ThreadFieldSchemaChangeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ThreadFieldSchemaChangeGraphQLField":
        self._alias = alias
        return self


class SubscriptionAcknowledgementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SubscriptionAcknowledgementGraphQLField":
        self._alias = alias
        return self


class CustomerCardInstanceChangesResultUnion(GraphQLField):
    def on(
        self, type_name: str, *subfields: GraphQLField
    ) -> "CustomerCardInstanceChangesResultUnion":
        self._inline_fragments[type_name] = subfields
        return self

    def alias(self, alias: str) -> "CustomerCardInstanceChangesResultUnion":
        self._alias = alias
        return self


class UpsertCustomerGroupOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpsertCustomerGroupOutputGraphQLField":
        self._alias = alias
        return self


class CreateCustomerGroupOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateCustomerGroupOutputGraphQLField":
        self._alias = alias
        return self


class UpdateCustomerGroupOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateCustomerGroupOutputGraphQLField":
        self._alias = alias
        return self


class DeleteCustomerGroupOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteCustomerGroupOutputGraphQLField":
        self._alias = alias
        return self


class AddCustomerToCustomerGroupsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddCustomerToCustomerGroupsOutputGraphQLField":
        self._alias = alias
        return self


class RemoveCustomerFromCustomerGroupsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveCustomerFromCustomerGroupsOutputGraphQLField":
        self._alias = alias
        return self


class CompanySearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanySearchResultGraphQLField":
        self._alias = alias
        return self


class CompanySearchResultEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanySearchResultEdgeGraphQLField":
        self._alias = alias
        return self


class CompanySearchResultConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompanySearchResultConnectionGraphQLField":
        self._alias = alias
        return self


class TenantSearchResultGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TenantSearchResultGraphQLField":
        self._alias = alias
        return self


class TenantSearchResultEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TenantSearchResultEdgeGraphQLField":
        self._alias = alias
        return self


class TenantSearchResultConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TenantSearchResultConnectionGraphQLField":
        self._alias = alias
        return self


class ServiceAuthorizationConnectionDetailsGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ServiceAuthorizationConnectionDetailsGraphQLField":
        self._alias = alias
        return self


class StartServiceAuthorizationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "StartServiceAuthorizationOutputGraphQLField":
        self._alias = alias
        return self


class CompleteServiceAuthorizationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CompleteServiceAuthorizationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteServiceAuthorizationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteServiceAuthorizationOutputGraphQLField":
        self._alias = alias
        return self


class DeleteMyServiceAuthorizationOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteMyServiceAuthorizationOutputGraphQLField":
        self._alias = alias
        return self


class ServiceIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ServiceIntegrationGraphQLField":
        self._alias = alias
        return self


class JiraSiteGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JiraSiteGraphQLField":
        self._alias = alias
        return self


class JiraSiteIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "JiraSiteIntegrationGraphQLField":
        self._alias = alias
        return self


class DefaultServiceIntegrationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DefaultServiceIntegrationGraphQLField":
        self._alias = alias
        return self


class ServiceAuthorizationGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ServiceAuthorizationGraphQLField":
        self._alias = alias
        return self


class ServiceAuthorizationEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ServiceAuthorizationEdgeGraphQLField":
        self._alias = alias
        return self


class ServiceAuthorizationConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ServiceAuthorizationConnectionGraphQLField":
        self._alias = alias
        return self


class UpsertBusinessHoursOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpsertBusinessHoursOutputGraphQLField":
        self._alias = alias
        return self


class DeleteBusinessHoursOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteBusinessHoursOutputGraphQLField":
        self._alias = alias
        return self


class BusinessHoursWeekDaysGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BusinessHoursWeekDaysGraphQLField":
        self._alias = alias
        return self


class BusinessHoursGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BusinessHoursGraphQLField":
        self._alias = alias
        return self


class BusinessHoursWeekDayGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BusinessHoursWeekDayGraphQLField":
        self._alias = alias
        return self


class TimezoneGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TimezoneGraphQLField":
        self._alias = alias
        return self


class BusinessHoursSlotGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BusinessHoursSlotGraphQLField":
        self._alias = alias
        return self


class SyncBusinessHoursSlotsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SyncBusinessHoursSlotsOutputGraphQLField":
        self._alias = alias
        return self


class UpdateThreadTenantOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateThreadTenantOutputGraphQLField":
        self._alias = alias
        return self


class UpdateThreadTierOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateThreadTierOutputGraphQLField":
        self._alias = alias
        return self


class AddCustomerToTenantsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddCustomerToTenantsOutputGraphQLField":
        self._alias = alias
        return self


class RemoveCustomerFromTenantsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveCustomerFromTenantsOutputGraphQLField":
        self._alias = alias
        return self


class SetCustomerTenantsOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "SetCustomerTenantsOutputGraphQLField":
        self._alias = alias
        return self


class CreateCheckoutSessionOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateCheckoutSessionOutputGraphQLField":
        self._alias = alias
        return self


class PriceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PriceGraphQLField":
        self._alias = alias
        return self


class PriceTierGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PriceTierGraphQLField":
        self._alias = alias
        return self


class RecurringPriceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RecurringPriceGraphQLField":
        self._alias = alias
        return self


class PerSeatRecurringPriceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PerSeatRecurringPriceGraphQLField":
        self._alias = alias
        return self


class TieredRecurringPriceGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "TieredRecurringPriceGraphQLField":
        self._alias = alias
        return self


class BillingPlanGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BillingPlanGraphQLField":
        self._alias = alias
        return self


class BillingPlanConnectionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BillingPlanConnectionGraphQLField":
        self._alias = alias
        return self


class BillingPlanEdgeGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BillingPlanEdgeGraphQLField":
        self._alias = alias
        return self


class CreateBillingPortalSessionOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateBillingPortalSessionOutputGraphQLField":
        self._alias = alias
        return self


class BillingFeatureEntitlementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BillingFeatureEntitlementGraphQLField":
        self._alias = alias
        return self


class ToggleFeatureEntitlementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ToggleFeatureEntitlementGraphQLField":
        self._alias = alias
        return self


class MeteredFeatureEntitlementGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "MeteredFeatureEntitlementGraphQLField":
        self._alias = alias
        return self


class BillingSubscriptionGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BillingSubscriptionGraphQLField":
        self._alias = alias
        return self


class RoleChangeCostGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RoleChangeCostGraphQLField":
        self._alias = alias
        return self


class CalculateRoleChangeCostOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CalculateRoleChangeCostOutputGraphQLField":
        self._alias = alias
        return self


class AddUserToActiveBillingRotaOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "AddUserToActiveBillingRotaOutputGraphQLField":
        self._alias = alias
        return self


class RemoveUserFromActiveBillingRotaOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RemoveUserFromActiveBillingRotaOutputGraphQLField":
        self._alias = alias
        return self


class BillingRotaGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BillingRotaGraphQLField":
        self._alias = alias
        return self


class UpdateActiveBillingRotaOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "UpdateActiveBillingRotaOutputGraphQLField":
        self._alias = alias
        return self


class ChangeBillingPlanOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "ChangeBillingPlanOutputGraphQLField":
        self._alias = alias
        return self


class PreviewBillingPlanChangeOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PreviewBillingPlanChangeOutputGraphQLField":
        self._alias = alias
        return self


class BillingPlanChangePreviewGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "BillingPlanChangePreviewGraphQLField":
        self._alias = alias
        return self


class PaymentMethodGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "PaymentMethodGraphQLField":
        self._alias = alias
        return self


class WorkspaceHmacGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceHmacGraphQLField":
        self._alias = alias
        return self


class RegenerateWorkspaceHmacOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "RegenerateWorkspaceHmacOutputGraphQLField":
        self._alias = alias
        return self


class WorkspaceFileDownloadUrlGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceFileDownloadUrlGraphQLField":
        self._alias = alias
        return self


class WorkspaceFileGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceFileGraphQLField":
        self._alias = alias
        return self


class WorkspaceFileUploadUrlGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "WorkspaceFileUploadUrlGraphQLField":
        self._alias = alias
        return self


class CreateWorkspaceFileUploadUrlOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "CreateWorkspaceFileUploadUrlOutputGraphQLField":
        self._alias = alias
        return self


class DeleteWorkspaceFileOutputGraphQLField(GraphQLField):
    def alias(self, alias: str) -> "DeleteWorkspaceFileOutputGraphQLField":
        self._alias = alias
        return self
